language: php

services:
  - rabbitmq

# faster builds on docker-container setup
sudo: false

# used for HHVM
addons:
  apt:
    packages:
      - tidy

# cache vendor dirs
cache:
    apt: true
    directories:
        - vendor
        - $HOME/.composer/cache
        - node_modules
        - $HOME/.cache/bower
        - $HOME/.npm

php:
    - 5.5
    - 5.6
    - 7.0
    - 7.1
    - nightly

node_js:
    - "5"

env:
    - DB=mysql ASSETS=nobuild
    - DB=pgsql ASSETS=nobuild
    - DB=sqlite ASSETS=nobuild

matrix:
    fast_finish: true
    include:
        # driver for PostgreSQL currently unsupported by HHVM, requires 3rd party dependency
        - php: hhvm-3.12
          sudo: required
          dist: trusty
          group: edge
          env: DB=mysql
          addons:
            apt:
                packages:
                    - mysql-server-5.6
                    - mysql-client-core-5.6
                    - mysql-client-5.6
          services:
            - mysql
        - php: hhvm-3.12
          sudo: required
          dist: trusty
          group: edge
          env: DB=sqlite
        - php: 7.0
          env: CS_FIXER=run VALIDATE_TRANSLATION_FILE=run DB=sqlite ASSETS=nobuild
        - php: 7.0
          env: DB=sqlite ASSETS=build
    allow_failures:
        - php: hhvm-3.12
        - php: 7.1
        - php: nightly

# exclude v1 branches
branches:
    except:
        - legacy

before_script:
    - PHP=$TRAVIS_PHP_VERSION
    - if [[ ! $PHP = hhvm* ]]; then echo "memory_limit=-1" >> ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/travis.ini; fi;
    # xdebug isn't enable for PHP 7.1
    - if [[ ! $PHP = hhvm* ]]; then phpenv config-rm xdebug.ini || echo "xdebug not available"; fi
    - if [[ $PHP = 5.5 ]]; then composer require "phpunit/phpunit:4.*" --no-update; fi;
    - composer self-update --no-progress
    - if [[ "$DB" = "pgsql" ]]; then psql -c 'create database wallabag_test;' -U postgres; fi;

install:
    - if [[ $ASSETS != nobuild ]]; then source ~/.nvm/nvm.sh && nvm install 5.0; fi;
    - if [[ $ASSETS != nobuild ]]; then npm install -g npm@latest; fi;

before_install:
    - if [[ $TRAVIS_REPO_SLUG = wallabag/wallabag ]]; then cp .composer-auth.json ~/.composer/auth.json; fi;

script:
    - travis_wait bash install.sh
    - ant prepare-$DB
    - phpunit -v
    - if [ "$CS_FIXER" = "run" ]; then php bin/php-cs-fixer fix src/ --verbose --dry-run ; fi;
    - if [ "$VALIDATE_TRANSLATION_FILE" = "run" ]; then php bin/console lint:yaml src/Wallabag/CoreBundle/Resources/translations -v ; fi;
